require "bundler/capistrano"
#require 'new_relic/recipes'

default_run_options[:pty] = true

set :application, "sugar"
set :runner,      "app"
set :user,        "app"
set :use_sudo,    false

set :scm,                   "git"
set :repository,            "git@github.com:elektronaut/sugar.git"
set :branch,                "master"
set :deploy_via,            :remote_cache
set :git_enable_submodules, 1

role :app, "addsugar.me"
role :web, "addsugar.me"
role :db,  "addsugar.me", :primary => true

# If you aren't deploying to /u/apps/#{application} on the target
# servers (which is the default), you can specify the actual location
# via the :deploy_to variable:
#set :deploy_to, "/var/www/#{application}"

#set :flush_cache, true

desc "Create shared directories"
task :create_shared_dirs, :roles => [:web,:app] do
	run "mkdir #{deploy_to}/#{shared_dir}/cache"
	run "mkdir #{deploy_to}/#{shared_dir}/public_cache"
	run "mkdir #{deploy_to}/#{shared_dir}/sockets"
	run "mkdir #{deploy_to}/#{shared_dir}/sessions"
	run "mkdir #{deploy_to}/#{shared_dir}/index"
	run "mkdir #{deploy_to}/#{shared_dir}/sphinx"
	run "mkdir #{deploy_to}/#{shared_dir}/config"
	run "mkdir #{deploy_to}/#{shared_dir}/config/initializers"
	run "touch #{deploy_to}/#{shared_dir}/config/database.yml"
	#run "touch #{deploy_to}/#{shared_dir}/config/initializers/mailer.rb"
end

desc "Create symlinks"
task :create_symlinks, :roles => [:web,:app] do
	run "ln -s #{deploy_to}/#{shared_dir}/cache        #{deploy_to}/#{current_dir}/tmp/cache"
	run "ln -s #{deploy_to}/#{shared_dir}/sockets      #{deploy_to}/#{current_dir}/tmp/sockets"
	run "ln -s #{deploy_to}/#{shared_dir}/sessions     #{deploy_to}/#{current_dir}/tmp/sessions"
	run "ln -s #{deploy_to}/#{shared_dir}/index        #{deploy_to}/#{current_dir}/index"
	run "ln -s #{deploy_to}/#{shared_dir}/public_cache #{deploy_to}/#{current_dir}/public/cache"
	run "ln -s #{deploy_to}/#{shared_dir}/doodles      #{deploy_to}/#{current_dir}/public/doodles"
	run "ln -s #{deploy_to}/#{shared_dir}/sphinx       #{deploy_to}/#{current_dir}/db/sphinx"
end

desc "Symlink configs"
task :symlink_configs, :roles => [:web, :app] do
	run "ln -nsf #{shared_path}/config/database.yml             #{release_path}/config/database.yml"
	run "ln -nsf #{shared_path}/config/session_key              #{release_path}/config/session_key"
	run "ln -nsf #{shared_path}/config/newrelic.yml             #{release_path}/config/newrelic.yml"
	#run "ln -nsf #{shared_path}/config/initializers/mailer.rb   #{release_path}/config/initializers/mailer.rb"
	#run "ln -nsf #{shared_path}/config/initializers/newrelic.rb #{release_path}/config/initializers/newrelic.rb"
end

desc "Packs themes"
task :pack_themes, :roles => [:web] do
    run("cd #{deploy_to}/current; /usr/bin/rake sugar:pack_themes RAILS_ENV=production")
end

namespace :deploy do
    namespace :web do
        desc "Present a maintenance page to visitors. Message is customizable with the REASON enviroment variable."
        task :disable, :roles => [:web, :app] do
            if reason = ENV['REASON']
                run("cd #{deploy_to}/current; /usr/bin/rake sugar:disable_web REASON=\"#{reason}\"")
            else
                run("cd #{deploy_to}/current; /usr/bin/rake sugar:disable_web")
            end
        end
        
        desc "Makes the application web-accessible again."
        task :enable, :roles => [:web, :app] do
            run("cd #{deploy_to}/current; /usr/bin/rake sugar:enable_web")
        end
    end

	desc "Restart Application"
	task :restart, :roles => :app do
		run "touch #{current_path}/tmp/restart.txt"
	end
end

namespace :delayed_job do
	desc "Start delayed_job process" 
	task :start, :roles => :app do
		run "cd #{current_path}; script/delayed_job start production" 
	end

	desc "Stop delayed_job process" 
	task :stop, :roles => :app do
		run "cd #{current_path}; script/delayed_job stop production" 
	end

	desc "Restart delayed_job process" 
	task :restart, :roles => :app do
		run "cd #{current_path}; script/delayed_job restart production" 
	end
end


after "deploy:finalize_update", "symlink_configs"
after "deploy:setup",           "create_shared_dirs"
after "deploy:symlink",         "create_symlinks"
after "deploy:symlink",         "pack_themes"
#after "deploy:finalize_update", "thinking_sphinx:configure"

after "deploy:start",          "delayed_job:start" 
after "deploy:stop",           "delayed_job:stop" 
after "deploy:restart",        "delayed_job:restart"